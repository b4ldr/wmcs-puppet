profile::admin::groups:
  - analytics-admins
  - analytics-privatedata-users
profile::admin::managelingering: true
cluster: analytics

profile::hadoop::common::hadoop_cluster_name: 'analytics-test-hadoop'

profile::hive::client::hive_service_name: 'analytics-test-hive'

profile::analytics::cluster::hdfs_mount::monitoring_user: 'analytics'

profile::oozie::client::oozie_service: 'analytics-test-oozie'

# Kerberos config
profile::kerberos::keytabs::keytabs_metadata:
  - role: 'analytics'
    owner: 'analytics'
    group: 'analytics'
    filename: 'analytics.keytab'
  - role: 'analytics-search'
    owner: 'analytics-search'
    group: 'analytics-search'
    filename: 'analytics-search.keytab'
profile::kerberos::client::show_krb_ticket_info: true

# Context https://phabricator.wikimedia.org/T278353#6976509
profile::kerberos::client::dns_canonicalize_hostname: false

profile::kerberos::client::enable_autorenew: true

profile::debdeploy::client::exclude_mounts:
  - /mnt/hdfs

profile::java::java_packages:
  - version: '8'
    variant: 'jdk'
profile::java::extra_args: 'JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF-8"'

profile::monitoring::notifications_enabled: false

profile::presto::cluster_name: analytics-test-presto
profile::presto::discovery_uri: https://analytics-test-presto.eqiad.wmnet:8281

# Set up airflow instances.
profile::airflow::instances:
  # airflow@analytics-test instance.
  analytics-test:
    # Since we set security: kerberos a keytab must be deployed for the service_user.
    service_user: analytics
    service_group: analytics
    db_user: airflow_analytics_test
    monitoring_enabled: false
    airflow_config:
      core:
        # NOE: This is a temporary airflow dags directory that will be
        # used as an initial development playground for the
        # airflow-analytics-test instance.
        dags_folder: /srv/airflow-analytics-test-dags
        security: kerberos
        executor: LocalExecutor
        # This can be an ERB template that will be rendered in airflow::instance.
        # db_user and db_password params should be set in puppet private
        # in profile::airflow::instances_secrets.
        sql_alchemy_conn: mysql://<%= @db_user %>:<%= @db_password %>@an-test-coord1001.eqiad.wmnet/airflow_analytics_test?ssl_ca=/etc/ssl/certs/Puppet_Internal_CA.pem
profile::contacts::role_contacts: ['Analytics SREs']
