# General configs
cluster: elasticsearch
profile::admin::groups:
  - elasticsearch-roots


profile::lvs::realserver::pools:
  search:
    services:
      - "elasticsearch_6@production-search-%{::site}"
  search-https:
    services:
      - nginx
      - "elasticsearch_6@production-search-%{::site}"
  search-omega-https:
    services:
      - nginx
      - "elasticsearch_6@production-search-omega-%{::site}"
  search-psi-https:
    services:
      - nginx
      - "elasticsearch_6@production-search-psi-%{::site}"

# T130329
profile::monitoring::nrpe_check_disk_options: -w 15% -c 10% -W 6% -K 3% -l -e -A -i "/srv/sd[a-b][1-3]" --exclude-type=tracefs

profile::elasticsearch::version: '6.5'
profile::elasticsearch::config_version: '6'
profile::elasticsearch::cirrus::storage_device: md1
profile::elasticsearch::cirrus::ferm_srange: '$DOMAIN_NETWORKS'
profile::elasticsearch::cirrus::expose_http: true
profile::elasticsearch::cirrus::enable_http2: false
profile::elasticsearch::base_data_dir: /srv/elasticsearch
profile::elasticsearch::common_settings:
    awareness_attributes: 'row'
    # We need these plugins to be loaded in order to work properly. This will keep
    # elasticsearch from starting if these plugins are not available.
    plugins_mandatory:
      - analysis-hebrew
      - analysis-icu
      - analysis-smartcn
      - analysis-stconvert
      - analysis-stempel
      - analysis-ukrainian
      - experimental-highlighter
      - extra
      - extra-analysis-esperanto
      - extra-analysis-serbian
      - extra-analysis-slovak
      - ltr

    # More than 30G isn't very useful
    heap_memory: '30G'

    # Don't run if more than 1 master missing
    minimum_master_nodes: 2

    # wait that long for all nodes to restart. If not all nodes are present after
    # `recover_after_time`, recover anyway, as long as at least
    # `recover_after_nodes` are present.
    recover_after_time: '5m'

    # mwgrep queries one copy of each shard in the cluster, which is currently
    # just over 3k shards. For it to work we need to increase the limit from
    # default 1k
    search_shard_count_limit: 5000

    # Increase the per-node cache for compiled LTR models from default 10MB
    ltr_cache_size: '100mb'

    # Let apifeatureusage and glent (via mjolnir) create their indices
    auto_create_index: '+apifeatureusage-*,+glent_*,-*'

    script_max_compilations_per_minute: 10000
    bulk_thread_pool_executors: 6
    bulk_thread_pool_capacity: 1000
    filter_cache_size: '20%'

profile::elasticsearch::cirrus::enable_remote_search: true
profile::tlsproxy::instance::nginx_variant: 'light'
profile::contacts::role_contacts: ['Search Platform SREs']
