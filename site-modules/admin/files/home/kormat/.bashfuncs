pathmunge() {
    [ -d "$2" ] || return
    if ! echo ${!1} | egrep -q "(^|:)$2($|:)"; then
        if [ -n "${!1}" ]; then
            declare -g $1=$2:${!1}
        else
            declare -g $1=$2
        fi
    fi
}
UNSETTODO+=" pathmunge"

rebash() {
    for i in ~/.bash_profile ~/.profile ~/.bashrc; do
        if [ -e "$i" ]; then
            echo "Sourcing ~/$(basename $i)"
            . "$i"
            break
        fi
    done
}

check() {
    # check
    # check user
    # check -w user
    local options
    local opts
    local OPTIND
    options="fu"

    while getopts "aw" opts "$1"; do
      case $opts in
        w) options+="ww";;
      esac
    done
    shift $(($OPTIND - 1))

    ps $options -U "${1:-$LOGNAME}"
}

if [ -n $(type -P tmux) ]; then
    there() {
        local sname="${1:-here}"
        [ "$sname" = '-ls' ] && { tmux ls; return 0; }
        tmux new -ADs "$sname"
    }
fi

keyme() {
  local DIR="$HOME/.keyme"
  local SOURCE_FILE="$DIR/$HOSTNAME.sh"
  #Don't try to use the current one.
  unset SSH_AUTH_SOCK SSH_AGENT_PID

  mkdir -p "$DIR" || return

  if [ -f "$SOURCE_FILE" ]; then
    . "$SOURCE_FILE" > /dev/null
    ssh-add -l &>/dev/null
    if [ "$?" -lt "2" ]; then
     echo "Found existing working ssh-agent ($SSH_AGENT_PID)"
     return
   else
      echo "Nuking existing stale state"
      cat /dev/null > "$SOURCE_FILE"
   fi
  fi

  ssh-agent > "$SOURCE_FILE"
  . "$SOURCE_FILE" > /dev/null
  echo "Started new ssh-agent ($SSH_AGENT_PID)"
}

activate() {
    if [ -d .tox ]; then
        echo "=====> Detecting tox venv"
        for i in .tox/*$1*/bin/activate; do
            echo "====> Activating $i"
            . "$i"
            break
        done
    elif which poetry &>/dev/null; then
        echo "====> Detecting poetry venv"
        pypath=$(poetry run which python) || return 1
        echo "====> Activating"
        . $(dirname $pypath)/activate
    fi
}

cdg() {
    local top
    top=$(git rev-parse --show-toplevel 2>/dev/null)
    [ -n "$top" ] && cd "$top"
}

cdaliassetup() {
    local name
    name="$1"
    shift
    while [ "$1" ]; do
        if [ -d "$1" ]; then
            alias cd$name="cd $1"
            break
        fi
        shift
    done
}
UNSETTODO+=" cdaliassetup"

promptsetup() {
    local USER_COLOUR=36
    if [ "$NOCOLOUR" ]; then
        PS1='\u@\h:\w(\j:$?)\$ '
    else
        [ "$LOGNAME" = "root" ] && USER_COLOUR=31
        PS1='\[\033['$USER_COLOUR';1m\]\u\[\033[0m\]@\[\033[32;1m\]\h\[\033[0m\]:\w(\j:$?)\$ '
    fi

    case "$TERM" in
        xterm*|rxvt*)
            PROMPT_COMMAND='echo -ne "\033]0;${USER}@${HOSTNAME}: ${PWD/#$HOME/~}\007"'
        ;;
    esac
}
UNSETTODO+=" promptsetup"

# vim:ft=sh
