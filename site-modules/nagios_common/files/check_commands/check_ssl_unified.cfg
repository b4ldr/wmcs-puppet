# special Wikimedia-specific check for cache terminators' "unified" certificate
# with OCSP stapling and SAN list verification, separately for different
# authalgs (RSA and ECDSA).  It checks without any SNI sent, to ensure this is
# the default cert for non-SNI clients as well.
# for LE check variants we keep shorter warning and critical thresholds for the following reasons:
# 1. LE issues certificates with 3 months lifespan
# 2. A renewed certificate must be hold 7 days to avoid issues with clients suffering clock skewing
# 3. LE issues are renewed one month before they get expired
#
# $ARG1$ - Auth algorithm (RSA or ECDSA)
# $ARG2$ - CN to send in SNI and verify against
# $ARG3$ - Comma-separated list of SAN elements which must be present in SubjectAltNames of the server cert.

define command{
    command_name    check_ssl_unified
    command_line    $USER1$/check_ssl -H $HOSTADDRESS$ -p 443 --no-sni --ocsp must-staple --authalg '$ARG1$' --cn '$ARG2$' --sans '$ARG3$'
}

define command{
    command_name    check_ssl_unified_letsencrypt
    command_line    $USER1$/check_ssl --warning 15 --critical 7 --no-sni -H $HOSTADDRESS$ -p 443 --ocsp must-staple --authalg '$ARG1$' --cn '$ARG2$' --sans '$ARG3$'
}

define command{
    command_name    check_ssl_unified_sni_letsencrypt
    command_line    $USER1$/check_ssl --warning 15 --critical 7 -H $HOSTADDRESS$ -p 443 --ocsp must-staple --authalg '$ARG1$' --cn '$ARG2$' --sans '$ARG3$'
}

define command{
    command_name    check_ssl_unified_sni_letsencrypt_no_ocsp
    command_line    $USER1$/check_ssl --warning 15 --critical 7 -H $HOSTADDRESS$ -p 443 --authalg '$ARG1$' --cn '$ARG2$' --sans '$ARG3$'
}
