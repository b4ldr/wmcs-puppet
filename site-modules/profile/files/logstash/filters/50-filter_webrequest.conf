# vim:set sw=2 ts=2 sts=2 et
# Process webrequest logs (5xx) from role logging::kafkatee::webrequest::ops
filter {

  if [type] == "webrequest" {
    # Tag for storage in elasticsearch
    mutate {
      add_tag => [ "es" ]
      id => "filter/mutate/webrequest/es"
    }

    # URL-decode query string and path
    mutate {
      add_field => {
        "uri_query_decoded" => "%{uri_query}"
      }
      id => "filter/mutate/webrequest/query"
    }

    urldecode {
      field => "uri_query_decoded"
      id => "filter/urldecode/webrequest/query"
    }

    mutate {
      add_field => {
        "uri_path_decoded" => "%{uri_path}"
      }
      id => "filter/mutate/webrequest/path"
    }

    urldecode {
      field => "uri_path_decoded"
      id => "filter/urldecode/webrequest/path"
    }

    # Build http_request field used for topN reporting
    mutate {
      add_field => {
        "http_request" => "%{http_method}"
      }
      id => "filter/mutate/webrequest/method"
    }

    if [x_analytics] !~ /https=1/ {
      mutate {
        update => {
          "http_request" => "%{http_request} http://"
        }
        id => "filter/mutate/webrequest/http"
      }
    } else {
      mutate {
        update => {
          "http_request" => "%{http_request} https://"
        }
        id => "filter/mutate/webrequest/https"
      }
    }

    mutate {
      update => {
        "http_request" => "%{http_request}%{uri_host}%{uri_path_decoded}%{uri_query_decoded}"
      }
      id => "filter/mutate/webrequest/assemble"
    }

    # Move 'hostname' (varnish machine processing the request) to 'host'
    # (machine sending the logs via kafkatee) so existing visualizations do the
    # right thing and show varnish machine instead.
    mutate {
      replace => {
        "host" => "%{hostname}"
      }
      remove_field => [ "hostname" ]
      id => "filter/mutate/webrequest/hostname"
    }
  }
}
