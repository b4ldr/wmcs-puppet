# Filters for Logstash to ECS formatting
filter {
  if [program] == "input-file-logstash-json" {
    # Parse timestamp field
    date {
      match => [ "timeMillis", "UNIX_MS" ]
      target => "@timestamp"
      id => "filter/logstash_ecs/date"
    }

    mutate {
      add_field => {
        "[ecs][version]" => "1.7.0"
        "[service][type]" => "logstash"
      }
      rename => {
        "host" => "[host][name]"
        "[logEvent][message]" => "message"
        "loggerName" => "[log][logger]"
        "thread" => "[process][thread][name]"
        "[logEvent][action][2][metaClass][metaClass][metaClass][response][index][error][type]" => "[error][type]"
        "[logEvent][action][2][metaClass][metaClass][metaClass][response][index][error][reason]" => "[error][message]"
        "[logEvent][action][2][metaClass][metaClass][metaClass][response][index][_index]" => "[labels][index]"
        "[logEvent][exception][metaClass][metaClass][metaClass][exception]" => "[error][message]"
      }
      id => "filter/logstash_ecs/mutate"
    }

    # json encode logEvent into log.original field
    if [logEvent] {
      ruby {
        code => "unless event.get('logEvent').empty?; event.set('[log][original]', event.get('logEvent').to_json); end"
        tag_on_exception => "_rubyexception:logEvent_to_json"
      }
    }
  }
}
