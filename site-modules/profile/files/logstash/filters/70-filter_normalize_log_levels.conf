# vim:set sw=2 ts=2 sts=2 et
# Normalize contents of level fields to uppercase PSR-3 labels:
# DEBUG, INFO, NOTICE, WARNING, ERROR, CRITICAL, ALERT, EMERGENCY
filter {
  if "es" in [tags] and [level] {
    # Levels should always be strings
    mutate {
      convert => { "level" => "string" }
      id => "filter/mutate/normalize/level_to_string"
    }

    if [level] =~ /^\d$/ and "gelf" in [tags] {
      # Convert gelf-stream numeric level to human readable string
      mutate {
        add_field => { "gelf_level" => "%{level}" }
        id => "filter/mutate/normalize/gelf"
      }
      mutate {
        gsub => [
          "level", "^0$", "EMERGENCY",
          "level", "^1$", "ALERT",
          "level", "^2$", "CRITICAL",
          "level", "^3$", "ERROR",
          "level", "^4$", "WARNING",
          "level", "^5$", "NOTICE",
          "level", "^6$", "INFO",
          "level", "^7$", "DEBUG"
        ]
        id => "filter/mutate/normalize/gelf_level"
      }
    } # end [level] =~ /^\d$/ and "gelf" in [tags]

    # Make contents of level field upper case
    mutate {
      uppercase => [ "level" ]
      id => "filter/mutate/normalize/level_to_uppercase"
    }

    # Normalize level values, e.g. rewrite ERR to ERROR
    mutate {
      gsub => [
        # syslog level name
        "level", "^Informational$", "INFO",
        # Apache2 & Cassandra level name
        "level", "^WARN$", "WARNING",
        # rsyslog
        "level", "^CRIT$", "CRITICAL",
        "level", "^ERR$", "ERROR"
      ]
      id => "filter/mutate/normalize/level"
    }
  }
}
