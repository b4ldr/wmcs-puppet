<%- n = @listener['name'] -%>
address:
<%- if @listen_ipv6 -%>
  socket_address: {protocol: TCP, address: "::1", port_value: <%= @listener['port'] %>}
<%- else -%>
  socket_address: {protocol: TCP, address: 0.0.0.0, port_value: <%= @listener['port'] %>}
<%- end -%>
filter_chains:
- filters:
  - name:  envoy.http_connection_manager
    typed_config:
      "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
      access_log:
      - name: envoy.file_access_log
        filter:
          status_code_filter:
            comparison:
              op: "GE"
              value:
                default_value: 500
                runtime_key: <%= n %>_min_log_code
        typed_config:
          "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
          path: "/var/log/envoy/<%= n %>.log"
      stat_prefix: <%= n %>_egress
      http_filters:
      - name: envoy.filters.http.router
        typed_config: {}
      route_config:
        <%- if @listener['xfp'] -%>
        request_headers_to_remove:
        - x-forwarded-proto
        request_headers_to_add:
        - header:
            key: "x-forwarded-proto"
            value: "<%= @listener['xfp'] %>"
        <%- end -%>
        name: <%= n %>_route
        virtual_hosts:
        - name: <%= n %>
          domains: ["*"]
          routes:
          - match:
              prefix: "/"
            route:
  <%- if @listener['http_host'] -%>
              host_rewrite: <%= @listener['http_host'] %>
  <%- end -%>
              cluster: <%= @svc_name %>
              timeout: <%= @listener['timeout'] %>
              retry_policy:
              <%- @retry_policy.each do |k,v| -%>
                <%= k %>: <%= scope.call_function('to_json',[v]) %>
              <%- end -%>
