#!/bin/bash
# GitLab backup script
# T274463
# T283076


# documentation on backing up and restoring can be found here:
# https://docs.gitlab.com/ee/raketasks/backup_restore.html

# Possible parts to SKIP are:
#
# db            Database
# uploads       Attachments
# builds        CI job output logs
# artifacts     CI job artifacts
# lfs           LFS objects
# registry      Container Registry images
# pages         Pages content
# repositories  Git repositories data + Wiki data
#
# tar           Leave backup archives in the intermediate directory, skip tar creatio

case "$1" in
    "full")
    /usr/bin/gitlab-backup create CRON=1 STRATEGY=copy GZIP_RSYNCABLE="<%= @rsyncable_gzip %>" SKIP=builds,artifacts,registry GITLAB_BACKUP_MAX_CONCURRENCY="<%= @max_concurrency %>" GITLAB_BACKUP_MAX_STORAGE_CONCURRENCY="<%= @max_storage_concurrency %>" && ls -t "<%= @backup_dir_data %>"/*gitlab_backup.tar | head -n1 | xargs -i cp {} "<%= @backup_dir_data %>"/latest/latest.tar;;
    "partial")
    /usr/bin/gitlab-backup create CRON=1 STRATEGY=copy GZIP_RSYNCABLE="<%= @rsyncable_gzip %>" SKIP=uploads,builds,artifacts,lfs,registry,pages GITLAB_BACKUP_MAX_CONCURRENCY="<%= @max_concurrency %>" GITLAB_BACKUP_MAX_STORAGE_CONCURRENCY="<%= @max_storage_concurrency %>";;
    "config")
    /usr/bin/gitlab-ctl backup-etc && ls -t "<%= @backup_dir_config %>"/gitlab_config*.tar | head -n1 | xargs -i cp {} "<%= @backup_dir_config %>"/latest/latest.tar;;
    *)
    echo "Please run script with parameter [full, partial, config]"; exit 1 ;;
esac