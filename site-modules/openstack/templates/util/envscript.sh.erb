#!/bin/bash
# 'source <%= @script %>' will set these shell environment values
# from /etc/nova<%= @title %>.yaml
#
# OS_PROJECT_DOMAIN_ID
# OS_REGION_NAME
# OS_USER_DOMAIN_ID
# OS_IDENTITY_API_VERSION
# OS_PASSWORD
# OS_AUTH_URL
# OS_USERNAME
# OS_PROJECT_ID
# OS_INTERFACE
# OS_NO_CACHE
#
#  If invoked with --no-clobber then variables already set in the
#   environment will not be overwritten.

# Largely cribbed from https://gist.github.com/pkuczynski/8665367
parse_yaml() {
    file='/etc/<%= @title %>.yaml'
    s='[[:space:]]*' w='[a-zA-Z0-9_]*' fs=$(echo @|tr @ '\034')
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
         -e "s|^\($s\)\($w\)$s:$s\(.*\)$s\$|\1$fs\2$fs\3|p"  $file |
    awk -F$fs -v clobber=$1 '{
       indent = length($file)/2;
       vname[indent] = $2;
       for (i in vname) {if (i > indent) {delete vname[i]}}
       if (length($3) > 0) {
          vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
          if (!( $2 in ENVIRON) || clobber = 'clobber') {
             printf("%s=%s ",$2,$3)
          }
       }
    }'
}

if [[ -n $1 ]] && [ $1 = "--no-clobber" ]; then
    values=`parse_yaml`
else
    values=`parse_yaml clobber`
fi
for entry in $values; do
    export $entry
done
