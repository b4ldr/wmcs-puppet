# CREATE DATABASE keystone;
# GRANT ALL PRIVILEGES ON <%= @db_user %>.* TO 'keystone'@'<%= @ipaddress %>' IDENTIFIED BY '<%= @db_pass %>';
# GRANT ALL PRIVILEGES ON <%= @db_user %>.* TO 'keystone'@'%' IDENTIFIED BY '<%= @db_pass %>';

keystone --version
sudo puppet agent --disable 'keystone bootstrap'
source /etc/keystone/bootstrap/admintoken

sudo service keystone stop
# replace puppet files with originals
sudo cp /etc/keystone/original/* /etc/keystone
# Then the slimmed down bootstrap setup
sudo cp /etc/keystone/bootstrap/keystone.conf.bootstrap /etc/keystone/keystone.conf
# populate db
sudo su -s /bin/sh -c "keystone-manage db_sync" keystone

sudo service keystone restart

# Shenangians with "domain" handling in Liberty vs Mitaka
openstack domain create --description "Default Domain" Default
#
# TIL the doc guide does not follow the newly minted 'keystone-manage bootstrap'
# mechanism, which has a different outcome(s) itself from upgrading an existing 
# Liberty deploy.
#
# https://docs.openstack.org/mitaka/install-guide-ubuntu/keystone-services.html
# https://docs.openstack.org/releasenotes/keystone/mitaka.html
#
#  <=Liberty set the ID for a domain to 'default' literal where Mitaka
# wants to set a proper UUID except this causes chaos for us at the moment
# and is not consistent with any existing environments.
#
#  This is manually "fixing" this to match the Liberty=>Mitaka upgrade path case
## https://ask.openstack.org/en/question/95889/domainnotfound-could-not-find-domain-default/
## https://bugs.launchpad.net/openstack-manuals/+bug/1642472
## https://bugs.launchpad.net/keystone/+bug/1596869
## https://bugs.launchpad.net/keystone/+bug/1596869/comments/12
## https://bugs.launchpad.net/keystone/+bug/1596869/comments/13

openstack domain list
# Get the "UUID" for the default domain
DUUID=$(openstack domain list | grep Default | cut -d ' ' -f 2)
service keystone stop
sudo mysqldump keystone > /tmp/keystone.backup
cat /tmp/keystone.backup | sed -e "s/${DUUID}/default/g" | sudo mysql keystone
sudo service keystone start
openstack domain list
# (Valid output:)
# | default | Default | True    | Default Domain | 

openstack service create --name keystone --description "OpenStack Identity" identity
openstack endpoint create --region <%= @region %> identity public http://<%= @ipaddress %>:5000/v3
openstack endpoint create --region <%= @region %> identity internal http://<%= @ipaddress %>:5000/v3
openstack endpoint create --region <%= @region %> identity admin https://<%= @ipaddress %>:25357/v3

# there seems to be a bug where service list will report
# as non-existent using openstack client until there is 
# a service registered that is not keystone itself.
# using the old keystone client did not have this issue.
openstack endpoint list

openstack project create --domain default --description "Admin Project" admin
openstack project list

# more surgery because we have special conditions that require that
# project ID == project name.  This should naturally happen if all keystone
# hooks are firing but it may not be the case during initial bootstrap.

# get current admin project UUID
admin_project_uuid=$(openstack project list | grep admin | awk '{print $2}')

sudo service keystone stop
sudo mysqldump keystone > /tmp/keystone.db
cat /tmp/keystone.db | sed -e "s/${admin_project_uuid}/admin/g" | sudo mysql keystone
sudo service keystone start

# This will be empty because we are not looking at LDAP yet
openstack user list
openstack role create --or-show _member_
openstack role create --or-show admin
openstack role create --or-show reader
openstack role create --or-show projectadmin
openstack role create --or-show glanceadmin
openstack role create --or-show user
openstack role list

# enable puppet and pull in full config with LDAP
sudo puppet agent --enable && sudo puppet agent --test
sudo puppet agent --disable

# Find the admin_token config
grep admin_token /etc/keystone/bootstrap/keystone.conf.bootstrap

# add to the /etc/keystone/keystone.conf [DEFAULT] section
## [DEFAULT]
## admin_token = asdf
vim /etc/keystone/keystone.conf
source /etc/keystone/bootstrap/admintoken

# Edit the policy file to allow the admin user
# to modify grants
sudo vim /etc/keystone/policy.json

Change:

    "identity:list_grants": "rule:admin_required",
    "identity:create_grant": "rule:admin_required",

To:

    "identity:list_grants": "",
    "identity:create_grant": "",

sudo service keystone restart

# This needs to show ldap users (including novaadmin)
PYTHONIOENCODING=utf-8 openstack user list | wc -l
PYTHONIOENCODING=utf-8 openstack user list | grep novaadmin
# tell openstack that the novaadmin user (from ldap)
# is an admin user in the admin project
openstack role add --project admin --user novaadmin admin

sudo puppet agent --enable && sudo puppet agent --test

# exit
# source /root/novaenv.sh
openstack token issue
openstack user list
openstack endpoint list
openstack domain list

