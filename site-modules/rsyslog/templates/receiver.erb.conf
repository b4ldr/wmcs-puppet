# make gtls driver the default netstream
$DefaultNetstreamDriver gtls
$DefaultNetstreamDriverCAFile /var/lib/puppet/ssl/certs/ca.pem
$DefaultNetstreamDriverCertFile /etc/rsyslog-receiver/ssl/cert.pem
$DefaultNetstreamDriverKeyFile /etc/rsyslog-receiver/ssl/server.key

# TCP configuration
$ModLoad imtcp
$InputTCPMaxSessions 4096
# Allow clients presenting a valid Puppet CA-signed cert.
# http://www.rsyslog.com/doc/v8-stable/concepts/ns_gtls.html
$InputTCPServerStreamDriverAuthMode x509/certvalid
$InputTCPServerStreamDriverMode 1 # run driver in TLS-only mode
input(type="imtcp" port="<%= @tcp_port %>" ruleset="remote_syslog")


# UDP configuration
$ModLoad imudp
input(type="imudp" port="<%= @udp_port %>" ruleset="remote_syslog")

template(name="dynafile-host-programname" type="list") {
    constant(value="<%= @log_directory %>/")
    property(name="hostname" )
    constant(value="/")
    property(name="programname")
    constant(value=".log")
}

template(name="dynafile-host-swift" type="list") {
    constant(value="<%= @log_directory %>/")
    property(name="hostname" )
    constant(value="/")
    constant(value="swift.log")
}

template(name="dynafile-host-catchall" type="list") {
    constant(value="<%= @log_directory %>/")
    property(name="hostname" )
    constant(value="/")
    constant(value="syslog.log")
}

# Common rulesets for syslog receiver
ruleset(name="remote_syslog") {
    # apache2 filters
    if $programname == "apache2" then {
        if ($msg contains "File does not exist:") or
                ($msg contains "File name too long:") or
                ($msg contains "Directory index forbidden") then {
            stop
        }

        action(type="omfile" dynaFile="dynafile-host-programname" fileCreateMode="0640" fileGroup="ops" dirGroup="ops" dirCreateMode="0750")
        stop
    }

    # swift filters
    if ($programname == "swift") or
           ($programname == "proxy-server") or
           re_match($programname, "(account|container|object)-(auditor|server|reaper|replicator|updater)") then {
        if ($msg contains "Handoff requested") or
                ($msg contains "GET /") or
                ($msg contains "HEAD /") then {
            stop
        }
        action(type="omfile" dynaFile="dynafile-host-swift" fileCreateMode="0640" fileGroup="ops" dirGroup="ops" dirCreateMode="0750")
        stop
    }

    # catch all
    action(type="omfile" dynaFile="dynafile-host-catchall" fileCreateMode="0640" fileGroup="ops" dirGroup="ops" dirCreateMode="0750")
}
